import numpy as np
'''
##############################################################################################

#                       0    |  1       2       3       4   |   5       6       7       8       9       10   |  11      12      13      14   |  15
P_raw =   np.array([    [2.3 ,  0.1   ,  0.8 ,  0.3   ,  0.5 ,   0   ,   0   ,   0   ,   0   ,   0    ,  0    ,  0    ,  0   ,   0   ,   0    ,  0],
                        [0  ,  1.4   ,  0   ,  0     ,  0   ,  0.8  ,   0.3 ,   0.5  ,  0    ,  0     , 0     , 0     , 0    ,  0    ,  0     , 0],    
                        [0  ,   0    ,  2.1 ,   0    ,  0   ,   0.1 ,   0   ,   0   ,   0.3 ,   0.5  ,  0    ,  0    ,  0   ,   0   ,   0    ,  0],
                        [0  ,   0    ,   0  ,   1.6  ,  0   ,   0   ,   0.1 ,   0   ,   0.8 ,   0    ,  0.5  ,  0    ,  0   ,   0   ,   0    ,  0],
                        [0  ,   0    ,   0    ,   0  ,  1.8 ,   0   ,   0   ,   0.1 ,   0   ,   0.8  ,  0.3  ,  0    ,  0   ,   0   ,   0    ,  0],
                        [0  ,   0    ,   0    ,   0  ,  0   ,   1.2 ,   0   ,   0   ,   0   ,   0    ,  0    ,  0.3  ,  0.5 ,   0   ,   0    ,  0],
                        [0  ,   0    ,   0    ,   0  ,  0   ,   0   ,   0.9 ,   0   ,   0   ,   0    ,  0    ,  0.8  ,  0   ,   0.5 ,   0    ,  0],
                        [0  ,   0    ,   0    ,   0  ,  0   ,   0   ,   0   ,   0.9 ,   0   ,   0    ,  0    ,  0    ,  0.8 ,   0.3 ,   0    ,  0],
                        [0  ,   0    ,   0    ,   0  ,  0   ,   0   ,   0   ,   0   ,   1.4 ,   0    ,  0    ,  0.1  ,  0   ,   0   ,   0.5  ,  0],
                        [0  ,   0    ,   0    ,   0  ,  0   ,   0   ,   0    ,  0    ,  0    ,  1.6   , 0     , 0     , 0.1  ,  0    ,  0.3   , 0],
                        [0  ,   0    ,   0    ,   0  ,  0   ,   0   ,   0  ,    0  ,    0  ,    0   ,   1.1 ,   0   ,   0  ,    0.1,    0.8 ,   0],
                        [0  ,   0    ,   0    ,   0  ,  0   ,   0   ,   0  ,    0  ,    0  ,    0   ,   0   ,   0.5 ,   0  ,    0  ,    0   ,   0.5],
                        [0  ,   0    ,   0    ,   0  ,  0   ,   0   ,   0   ,   0   ,   0   ,   0    ,  0    ,  0    ,  0.7 ,   0   ,   0    ,  0.3],
                        [0  ,   0    ,   0    ,  0   ,  0   ,   0   ,   0    ,  0    ,  0    ,  0     , 0     , 0     , 0    ,  0.2  ,  0     , 0.8],
                        [0  ,   0    ,   0    ,   0  ,  0   ,   0   ,   0   ,   0   ,   0   ,   0    ,  0    ,  0    ,  0   ,   0   ,   0.9  ,  0.1],
                        [0  ,   0    ,   0    ,   0  ,  0   ,   0   ,   0   ,   0   ,   0   ,   0    ,  0    ,  0    ,  0   ,   0   ,   0  ,  1],
                        ])
                                        
scaling_vec = np.array([ 0.25, 1/3 , 1/3, 1/3, 1/3, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1, 1, 1, 1,1])

P_scaled = np.zeros((16,16))

for i in range(P_raw.shape[0]):
    P_scaled[i] = P_raw[i]*scaling_vec[i]

print(P_scaled)
'''
################################################################################################

			 #0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F
PROB_MATRIX_A1 =       [[.9,.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#0
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#1
			[ 0, 0,.9,.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#2
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#3
			[ 0, 0, 0, 0,.9,.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#4
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#5
			[ 0, 0, 0, 0, 0, 0,.9,.1, 0, 0, 0, 0, 0, 0, 0, 0],#6
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#7
			[ 0, 0, 0, 0, 0, 0, 0, 0,.9,.1, 0, 0, 0, 0, 0, 0],#8
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#9
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,.9,.1, 0, 0, 0, 0],#10
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#11
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,.9,.1, 0, 0],#12
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#13
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,.9,.1],#14
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]]#15


# Transition matrix for action: "Try to solve Task 2"
			 #0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F
PROB_MATRIX_A2 =       [[.2, 0,.8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#0
			[ 0,.2, 0,.8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#1
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#2
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#3
			[ 0, 0, 0, 0,.2, 0,.8, 0, 0, 0, 0, 0, 0, 0, 0, 0],#4
			[ 0, 0, 0, 0, 0,.2, 0,.8, 0, 0, 0, 0, 0, 0, 0, 0],#5
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#6
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#7
			[ 0, 0, 0, 0, 0, 0, 0, 0,.2, 0,.8, 0, 0, 0, 0, 0],#8
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0,.2, 0,.8, 0, 0, 0, 0],#9
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#10
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#11
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,.2, 0,.8, 0],#12
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,.2, 0,.8],#13
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#14
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]]#15


# Transition matrix for action: "Try to solve Task 3"
			 #0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F
PROB_MATRIX_A3 =       [[.7, 0, 0, 0,.3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#0
			[ 0,.7, 0, 0, 0,.3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#1
			[ 0, 0,.7, 0, 0, 0,.3, 0, 0, 0, 0, 0, 0, 0, 0, 0],#2
			[ 0, 0, 0,.7, 0, 0, 0,.3, 0, 0, 0, 0, 0, 0, 0, 0],#3
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#4
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#5
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#6
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#7
			[ 0, 0, 0, 0, 0, 0, 0, 0,.7, 0, 0, 0,.3, 0, 0, 0],#8
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0,.7, 0, 0, 0,.3, 0, 0],#9
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,.7, 0, 0, 0,.3, 0],#10
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,.7, 0, 0, 0,.3],#11
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#12
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#13
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#14
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]]#15


# Transition matrix for action: "Try to solve Task 4"
			 #0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F
PROB_MATRIX_A4 =       [[.5, 0, 0, 0, 0, 0, 0, 0,.5, 0, 0, 0, 0, 0, 0, 0],#0
			[ 0,.5, 0, 0, 0, 0, 0, 0, 0,.5, 0, 0, 0, 0, 0, 0],#1
			[ 0, 0,.5, 0, 0, 0, 0, 0, 0, 0,.5, 0, 0, 0, 0, 0],#2
			[ 0, 0, 0,.5, 0, 0, 0, 0, 0, 0, 0,.5, 0, 0, 0, 0],#3
			[ 0, 0, 0, 0,.5, 0, 0, 0, 0, 0, 0, 0,.5, 0, 0, 0],#4
			[ 0, 0, 0, 0, 0,.5, 0, 0, 0, 0, 0, 0, 0,.5, 0, 0],#5
			[ 0, 0, 0, 0, 0, 0,.5, 0, 0, 0, 0, 0, 0, 0,.5, 0],#6
			[ 0, 0, 0, 0, 0, 0, 0,.5, 0, 0, 0, 0, 0, 0, 0,.5],#7
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#8
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#9
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#10
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#11
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#12
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#13
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#14
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]]#15

MULTIPLIER =           [0.25,1/3,1/3,0.5,1/3,0.5,0.5,1,1/3,0.5,0.5,1,0.5,1,1,.25]#0

A_1 = np.asarray(PROB_MATRIX_A1)
A_2 = np.asarray(PROB_MATRIX_A2)
A_3 = np.asarray(PROB_MATRIX_A3)
A_4 = np.asarray(PROB_MATRIX_A4)
MUL = np.asarray(MULTIPLIER)

PROB_MATRIX = A_1 + A_2 + A_3 + A_4

TRANSITION_MATRIX = np.transpose(np.multiply(np.transpose(PROB_MATRIX), MUL))
print(np.sum(TRANSITION_MATRIX, axis=1))


# Transition matrix for policy a: 'Start with task with lowest difficulty'
			 #0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F
PROB_MATRIX_PA =       [[.2, 0,.8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#0
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#1
			[ 0, 0,.5, 0, 0, 0, 0, 0, 0, 0,.5, 0, 0, 0, 0, 0],#2
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#3
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#4
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#5
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#6
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#7
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#8
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#9
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,.7, 0, 0, 0,.3, 0],#10
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#11
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#12
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#13
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,.9,.1],#14
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]#15

# Transition matrix for policy b: 'Start with task with highest difficulty'
			 #0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F
PROB_MATRIX_PB =       [[.9,.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#0
			[ 0,.7, 0, 0, 0,.3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#1
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#2
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#3
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#4
			[ 0, 0, 0, 0, 0,.5, 0, 0, 0, 0, 0, 0, 0,.5, 0, 0],#5
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#6
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#7
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#8
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#9
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#10
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#11
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#12
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,.2, 0,.8],#13
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],#14
			[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]#15


